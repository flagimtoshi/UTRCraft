<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_item</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocity=0;
item_index = spr_solid
special_data="";
Block_index = "ENGINE.SOLID.BLOCKINDEX"
index=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_player.HP != 0 {

if distance_to_object(obj_player) &lt; 7{
move_towards_point(obj_player.x,obj_player.y,4)
}

}



/*if object_index!=obj_item{

ioj=instance_create(x,y,obj_item)

ioj.index=index
ioj.item_index=item_index

instance_destroy();
}*/
//render_ent(8);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>108</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_friction</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0.2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if distance_to_cam() &gt; 900{
instance_deactivate_object(self);
}
show_world_around_entity(10, sprite_index);
if !place_meeting(x,y+1,obj_solid)
{
//gravity_direction = 270

if y&gt;SpaceOffset{
gravity = 0.5
}else{
gravity = 0.1
}

}
else
{
//gravity_direction = 270
gravity = 0
vspeed=0
}
//show_world_around_entity(8,spr_solid)
//if place_meeting(x,y+1,obj_solid){
//gravity = 0
//instance_change(obj_item_optimized,false);
//}

//velocity+=gravityy;
//y+=velocity;
//if place_meeting(x,y+1,obj_solid){
//velocity=0;
//move_contact_solid(270,1);
//}

//speed=mean(0,speed)
//render_ent(8)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,12)
vspeed = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if obj_player.HP != 0 {
slot=-1; // default for detecting full inventories
for(i=0;i&lt;obj_inventory.slotnumber+1;i+=1){ // check for item same id
    if obj_inventory.itemid[i]=index{
        slot=i;
        break;
    }
}
if slot=-1{ // if still defaut
    for(i=0;i&lt;obj_inventory.slotnumber+1;i+=1){ // check for empty slots
        if obj_inventory.itemid[i]=0{
            slot=i;
            break;
        }
    }
    
    //if slot!=-1{
    //   obj_inventory.slotid[slot]=index
    //} 
    
} 
if slot!=-1{
   obj_inventory.itemid[slot]=index
   obj_inventory.counti[slot]+=1;
   audio_sound_pitch(snd_item,random_range(0.75, 1.25));
   audio_play_sound(snd_item,5,0);  
   instance_destroy(); 
} 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var time = (current_time / 1000)+(x);
exitx=sprite_get_xoffset(item_index);
exity=sprite_get_yoffset(item_index);
sprite_set_offset(item_index,sprite_get_width(item_index)/2,sprite_get_height(item_index)/2);
draw_sprite_ext(item_index,0,x,y-sine_between(time, 1, 0.25, 1),0.5,0.5,sine_wave(time, 2, 15, 0),image_blend,image_alpha)
lightning_draw_segment
(item_index,0,x,y-sine_between(time, 1, 0.25, 1),0.5,0.5,sine_wave(time, 2, 15, 0),c_black,image_alpha)
sprite_set_offset(item_index,exitx,exity);
//lightning_item()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
