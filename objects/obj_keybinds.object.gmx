<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button_binds</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>number_of_binds=8;
selected=false;
selected_bind=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button_width=200*4;
button_height=64;
button_margin=8;
for (i=0; i&lt;number_of_binds+1; i+=1){
if (selected_bind=i and selected=1){
image_index_=1;
}else{
image_index_=0;
}
draw_9slice(x,   y+(i*button_height)+(button_margin*i)   ,button_width,button_height,spr_button_binds,image_index_)
if rect_meet(x,y+(i*button_height)+(button_margin*i),button_width,button_height,mouse_x,mouse_y){
   if mouse_check_button_pressed(mb_left){
   selected_bind=i
   selected=1;
   }else{
   //selected_bind=0
   }
}


    switch(i){ // check for keys
    case 0:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Interact: " + get_keyname(global.interact),//chr(global.sprint) ,
         4,4,0);
    break;
    case 1:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Slide: " + get_keyname(global.crouch),//chr(global.sprint) ,
         4,4,0);
    break;
    case 2:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Sprint: " + get_keyname(global.sprint),//chr(global.sprint) ,
         4,4,0);
    break;
    case 3:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Jump: " + get_keyname(global.jump),//chr(global.sprint) ,
         4,4,0);
    break;
    case 4:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Move Up: " + get_keyname(global.up_move),//chr(global.sprint) ,
         4,4,0);
    break;
    case 5:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Move Down: " + get_keyname(global.down_move),//chr(global.sprint) ,
         4,4,0);
    break;
    case 6:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Move Left: " + get_keyname(global.left_move),//chr(global.sprint) ,
         4,4,0);
    break;
    case 7:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Move Right: " + get_keyname(global.right_move),//chr(global.sprint) ,
         4,4,0);
    break;
    case number_of_binds:
         draw_text_transformed(x+8,y+8+(i*button_height)+(button_margin*i),
         "Exit Bind",
         4,4,0);
    break;
    }
}

if selected{
switch(selected_bind){
case 0:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("interact",keyboard_key);
        global.interact = keyboard_key
        selected=0;
     }
break;
case 1:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("slide",keyboard_key);
        global.crouch = keyboard_key
        selected=0;
     }
break;
case 2:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("sprint",keyboard_key);
        global.sprint = keyboard_key
        selected=0;
     }
break;
case 3:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("jump",keyboard_key);
        global.jump = keyboard_key
        selected=0;
     }
break;
case 4:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("move_up",keyboard_key);
        global.up_move = keyboard_key
        selected=0;
     }
break;
case 5:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("move_down",keyboard_key);
        global.down_move = keyboard_key
        selected=0;
     }
break;
case 6:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("move_left",keyboard_key);
        global.left_move = keyboard_key
        selected=0;
     }
break;
case 7:
     if keyboard_check_pressed(vk_anykey){
        scr_save_binds("move_right",keyboard_key);
        global.right_move = keyboard_key
        selected=0;
     }
break;

case number_of_binds:
     selected = 0;
break;

}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
