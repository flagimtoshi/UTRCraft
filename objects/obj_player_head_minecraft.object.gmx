<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//macros
//#macro X 0
//#macro Y 1

 X = 0
 Y = 1

//properties
height = 0.1;

length = 128;
width = 128;

top_length = length * (1+height);
top_width = width * (1+height);

//sprites
sprite_face = spr_stone_slabs;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=mouse_x
y=mouse_y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Four arrays that will contain the locations of the four vertices

//of the two rectangles
var topLeft, topRight, bottomRight, bottomLeft;

//Calculate vertices of the base rectangle, 0
topLeft[0, X] = x - length/2;
topLeft[0, Y] = y - width/2;

topRight[0, X] = x + length/2;
topRight[0, Y] = y - width/2;

bottomRight[0, X] = x + length/2;
bottomRight[0, Y] = y + width/2;

bottomLeft[0, X] = x - length/2;
bottomLeft[0, Y] = y + width/2;

//Distance to camera center, so that the bigger rectangle can be offset
//for the 3D effect
var cam_x = view_xview//camera_get_view_x(view_camera);
var cam_y = view_yview//camera_get_view_y(view_camera);
var cam_w = view_wview//camera_get_view_width(view_camera);
var cam_h = view_hview//camera_get_view_height(view_camera);

var camCenter;
camCenter[X] = cam_x + cam_w/2;
camCenter[Y] = cam_y + cam_h/2;

//Calculate offset to camera center
var camOffset;
camOffset[X] = x - camCenter[X];
camOffset[Y] = y - camCenter[Y];

//Set center point of the bigger rectangle
var topPos;
topPos[X] = x + (camOffset[X] * height);
topPos[Y] = y + (camOffset[Y] * height);

//Calculate vertices of the bigger rectangle, 1
topLeft[1, X] = topPos[X] - top_length/2;
topLeft[1, Y] = topPos[Y] - top_width/2;

topRight[1, X] = topPos[X] + top_length/2;
topRight[1, Y] = topPos[Y] - top_width/2;

bottomRight[1, X] = topPos[X] + top_length/2;
bottomRight[1, Y] = topPos[Y] + top_width/2;

bottomLeft[1, X] = topPos[X] - top_length/2;
bottomLeft[1, Y] = topPos[Y] + top_width/2;

//Determine which faces are visible
var topVisible = topLeft[1, Y] &gt; topLeft[0, Y];
var rightVisible = topRight[1, X] &lt; topRight[0, X];
var bottomVisible = bottomLeft[1, Y] &lt; bottomLeft[0, Y];
var leftVisible = topLeft[1, X] &gt; topLeft[0, X];

//Draw the base sprite
draw_sprite_pos(sprite_face, 0, topLeft[0, X], topLeft[0, Y], topRight[0, X], topRight[0, Y], bottomRight[0, X], bottomRight[0, Y], bottomLeft[0, X], bottomLeft[0, Y], 1);

//Draw the other four faces
//Up

draw_sprite_pos(sprite_face, image_index, topLeft[1, X], topLeft[1, Y], topRight[1, X], topRight[1, Y], topRight[0, X], topRight[0, Y], topLeft[0, X], topLeft[0, Y], topVisible);

//Right

//draw_sprite_pos(sprite_face, image_index, topRight[0, X], topRight[0, Y], topRight[1, X], topRight[1, Y], bottomRight[1, X], bottomRight[1, Y], bottomRight[0, X], bottomRight[0, Y], rightVisible);
draw_set_colour(c_black)
draw_set_alpha(0.4)
draw_sprite_pos(sprite_face, image_index, topRight[0, X], topRight[0, Y], topRight[1, X], topRight[1, Y], bottomRight[1, X], bottomRight[1, Y], bottomRight[0, X], bottomRight[0, Y], rightVisible);
draw_set_colour(image_blend)
draw_set_alpha(1)
//Down

//draw_sprite_pos(sprite_face, image_index, bottomLeft[0, X], bottomLeft[0, Y], bottomRight[0, X], bottomRight[0, Y], bottomRight[1, X], bottomRight[1, Y], bottomLeft[1, X], bottomLeft[1, Y], bottomVisible);
draw_set_colour(c_black)
draw_set_alpha(0.5)
draw_sprite_pos(sprite_face, image_index, bottomLeft[0, X], bottomLeft[0, Y], bottomRight[0, X], bottomRight[0, Y], bottomRight[1, X], bottomRight[1, Y], bottomLeft[1, X], bottomLeft[1, Y], bottomVisible);
draw_set_colour(image_blend)
draw_set_alpha(1)
//Left

//draw_sprite_pos(sprite_face, image_index, topLeft[1, X], topLeft[1, Y], topLeft[0, X], topLeft[0, Y], bottomLeft[0, X], bottomLeft[0, Y], bottomLeft[1, X], bottomLeft[1, Y], leftVisible);
draw_set_colour(c_black)
draw_set_alpha(0.4)
draw_sprite_pos(sprite_face, image_index, topLeft[1, X], topLeft[1, Y], topLeft[0, X], topLeft[0, Y], bottomLeft[0, X], bottomLeft[0, Y], bottomLeft[1, X], bottomLeft[1, Y], leftVisible);
draw_set_colour(image_blend)
draw_set_alpha(1)

//Draw the bigger rectangle sprite
draw_sprite_pos(sprite_face, 0, topLeft[1, X], topLeft[1, Y], topRight[1, X], topRight[1, Y], bottomRight[1, X], bottomRight[1, Y], bottomLeft[1, X], bottomLeft[1, Y], 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
