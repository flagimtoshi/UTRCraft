<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hand_chroma</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=1
image_yscale=1
radius=6;
i=1
x_offset=1.5
y_offset=1.5;
ji=instance_create(x,y,obj_light);
ji.visible=0;
_x=x;
_y=y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_rad=6*image_xscale;

x = obj_player.x
y = obj_player.y
if ! instance_exists(obj_controller_cursor){
if ! instance_exists(obj_sword_lvl0){
image_angle = point_direction(x,y,mouse_x,mouse_y)
}else{
image_angle = point_direction(x,y,x,y+1)
}
}else{
if ! instance_exists(obj_sword_lvl0){
image_angle = point_direction(x,y,obj_controller_cursor.x,obj_controller_cursor.y)
}else{
image_angle = point_direction(x,y,x,y+1)
}
}


if (obj_inventory.selnumb=obj_inventory.slotnumber+1) and (!instance_exists(weapon_index)){

instance_create(x,y,weapon_index)//weapon_index

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius=mean(radius,max_rad)

armx = x + lengthdir_x(0*sin(i), image_angle);//1.11*sin(i), image_angle);
army = y + lengthdir_y(0*sin(i), image_angle);//1.11*sin(i), image_angle);
arm_angle = image_angle+((6*sin(i))*obj_player.dirofv)-(4*obj_player.dirofv);

var rotatedX = armx + lengthdir_x(radius, arm_angle);
var rotatedY = army + lengthdir_y(radius, arm_angle);

if ! instance_exists(obj_3d_wee_d){
image_blend=playercolour;
draw_sprite_ext(
sprite_index,image_index,
armx,army,
image_xscale,image_yscale,
arm_angle,image_blend,image_alpha);
lightning_draw_segment(
sprite_index,image_index,
armx,army,
image_xscale,image_yscale,
arm_angle,c_black,image_alpha);
}
if (mouse_check_button_pressed(mb_right) or gamepad_button_check_pressed(0, gp_shoulderrb)){
radius=10
}
if ( (mouse_check_button(mb_left) or gamepad_button_check_pressed(0, gp_shoulderlb)) and position_meeting(mouse_x,mouse_y,obj_solid) ){
i++
radius=radius+1.25*sin(i)
}else{
i=mean(1,i);
}
//if!arrr=9{
/*draw_sprite_ext
(control.sprites[inv[arrr,0]],0,rotatedX-2,rotatedY-2,0.5,0.5*obj_player.dirofv,image_angle,c_white,image_alpha);
lightning_draw_segment
(control.sprites[inv[arrr,0]],0,rotatedX-2,rotatedY-2,0.5,0.5*obj_player.dirofv,image_angle,c_black,image_alpha);
//}*/
if obj_player.dirofv = 1{
var _c = dcos(arm_angle);
var _s = dsin(arm_angle);
var _x = rotatedX - x_offset * _c - y_offset * _s;
var _y = rotatedY - x_offset * -_s - y_offset * _c;
}else{
var _c = dcos(arm_angle);
var _s = dsin(arm_angle);
var _x = rotatedX - x_offset*obj_player.dirofv * _c*obj_player.dirofv - (y_offset+1)*obj_player.dirofv * _s;
var _y = rotatedY - x_offset*obj_player.dirofv * -_s*obj_player.dirofv - (y_offset+1)*obj_player.dirofv * _c;
}

if obj_inventory.selnumb!=obj_inventory.slotnumber+1{
draw_sprite_ext
(control.sprites[obj_inventory.itemid[obj_inventory.selnumb]],0,_x,_y,0.5,0.5*obj_player.dirofv,arm_angle,c_white,image_alpha);
lightning_draw_segment
(control.sprites[obj_inventory.itemid[obj_inventory.selnumb]],0,_x,_y,0.5,0.5*obj_player.dirofv,arm_angle,c_black,image_alpha);

if ! check_mplay() {
if instance_exists(ji){

switch (control.sprites[obj_inventory.itemid[obj_inventory.selnumb]]){
case spr_torch:
ji.x=rotatedX;
ji.y=rotatedY;
break;

case spr_bonfire:
ji.x=rotatedX;
ji.y=rotatedY;
break;

case spr_light_orb:
ji.x=rotatedX;
ji.y=rotatedY;
break;

default:
ji.x=-90000
ji.y=90000
break;
}

}else{
ji=instance_create(x,y,obj_light)
ji.visible=0
}
}else{instance_destroy(ji)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="80">
      <action>
        <libid>1</libid>
        <id>206</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object_motion</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_sticky_bomb</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>7</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>image_angle</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
